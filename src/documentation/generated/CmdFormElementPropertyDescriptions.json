{
    "value": {
        "comments": [
            "set value for v-model"
        ]
    },
    "element": {
        "comments": [
            "set type of native form-element"
        ],
        "annotations": {
            "allowedValues": [
                "input, select, textarea, button"
            ]
        }
    },
    "showLabel": {
        "comments": [
            "hide label (and asterisk if mandatory)",
            "",
            "label may not be removed, because it is required for accessibility"
        ]
    },
    "labelText": {
        "comments": [
            "text for label"
        ]
    },
    "toggleSwitch": {
        "comments": [
            "set to activate to use toggle-switch-styling",
            "element-prop must be set to \"input\" and type-attribute must be set to \"checkbox\" or \"radio\""
        ],
        "annotations": {
            "affectsStyling": [
                "true"
            ]
        }
    },
    "onLabel": {
        "comments": [
            "text for on-label",
            "",
            "set to activate switch-label (=label is placed on toggle-switch (not behind))",
            "toggleSwitch-prop must be set to \"true\"",
            "element-prop must be set to \"input\" and type-attribute must be set to \"checkbox\" or \"radio\""
        ]
    },
    "offLabel": {
        "comments": [
            "text for off-label",
            "",
            "set to activate switch-label (=label is placed on toggle-switch (not behind))",
            "toggleSwitch-prop must be set to \"true\"",
            "element-prop must be set to \"input\" and type-attribute must be set to \"checkbox\" or \"radio\""
        ]
    },
    "colored": {
        "comments": [
            "on/off-, yes/no-color-styling",
            "set to true, if checkbox/radio-buttons should have green/checked and red/unchecked color-coding",
            "toggleSwitch-prop must be set to \"true\"",
            "element-prop must be set to \"input\" and type-attribute must be set to \"checkbox\" or \"radio\""
        ],
        "annotations": {
            "affectsStyling": [
                "true"
            ]
        }
    },
    "inputValue": {
        "comments": [
            "allow checkbox/radio-buttons to get value from outside"
        ]
    },
    "replaceInputType": {
        "comments": [
            "for replacing native checkboxes/radio-buttons by custom ones (based on frontend-framework)"
        ],
        "annotations": {
            "affectsStyling": [
                "true"
            ]
        }
    },
    "htmlClass": {
        "comments": [
            "set an optional class on native form-element (use native class=\"\" on component ot set class on outer-component-element)",
            "",
            "may not be named as 'class' because it is a reserved keyword in JavaScript"
        ]
    },
    "id": {
        "comments": [
            "if for native form-element"
        ]
    },
    "datalist": {
        "comments": [
            "set if a native datalist should be used"
        ]
    },
    "selectOptions": {
        "comments": [
            "list of options for selectbox",
            "",
            "element-property must be 'select'"
        ]
    },
    "nativeButton": {
        "comments": [
            "native button"
        ]
    },
    "tooltipText": {
        "comments": [
            "set text for tooltip"
        ]
    },
    "fieldIconClass": {
        "comments": [
            "set class for inner icon (icon placed 'inside' input/ left of input-text)",
            "",
            "element-property must be 'input' and type-property may not be checkbox or radio"
        ]
    },
    "displayLabelInline": {
        "comments": [
            "activate if label-text should be place inline/left of form-element (and not above)",
            "",
            "type-property may not be checkbox or radio"
        ]
    },
    "status": {
        "comments": [
            "set status for label and form-element"
        ],
        "annotations": {
            "allowedValues": [
                "error, success",
                ""
            ],
            "affectsStyling": [
                "true"
            ]
        }
    },
    "showCharactersTextarea": {
        "comments": [
            "toggle display of number of used and allowed characters for textarea",
            "",
            "type-property must be set to textarea"
        ]
    }
}